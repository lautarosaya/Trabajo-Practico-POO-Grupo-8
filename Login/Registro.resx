<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctBackRE.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gGitW/dv1MKrKWCkvt4AAAAASUVORK5CYII=
</value>
  </data>
</root>