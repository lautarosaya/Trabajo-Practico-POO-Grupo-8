<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture330i.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QCEIQP/Z
</value>
  </data>
</root>